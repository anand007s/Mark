name: Build

on:
  push:
    branches: [ "**" ]


jobs:
  build-marker-api:
    name: Build mark-api
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: ./mvnw verify

      - name: Build and Publish Docker Image
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
            ./mvnw spring-boot:build-image -DskipTests
             IMAGE_ID=$(docker images -q ${DOCKER_USERNAME}/mark-api:latest)
             if [ -z "$IMAGE_ID" ]; then
              echo "Error: Docker image ID not found. Build might have failed."
              exit 1
             fi
              docker tag $IMAGE_ID ${DOCKER_USERNAME}/mark-api:latest
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push $DOCKER_USERNAME/mark-api:latest

#
#name: Build
#
#on:
#  push:
#    branches: [ "**" ]
#
#jobs:
#  build-marker-api:
#    name: Build mark-api
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: maven
#
#      - name: Build with Maven
#        run: ./mvnw verify
#
#      - name: Build Docker Image
#        if: ${{ github.ref == 'refs/heads/main' }}
#        env:
#          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#        run: |
#          ./mvnw spring-boot:build-image -DskipTests -Dspring-boot.build-image.imageName=${{ secrets.DOCKER_USERNAME }}/mark-api:latest
#          docker images
#
#      - name: Tag Docker Image
#        if: ${{ github.ref == 'refs/heads/main' }}
#        run: |
#          IMAGE_ID=$(docker images -q ${DOCKER_USERNAME}/mark-api:latest)
#          if [ -z "$IMAGE_ID" ]; then
#           echo "Error: Docker image ID not found. Build might have failed."
#           exit 1
#          fi
#          docker tag $IMAGE_ID ${DOCKER_USERNAME}/mark-api:latest
#
#      - name: Docker Login
#        if: ${{ github.ref == 'refs/heads/main' }}
#        env:
#          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
#
#      - name: Push Docker Image
#        if: ${{ github.ref == 'refs/heads/main' }}
#        env:
#          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#        run: docker push $DOCKER_USERNAME/mark-api:latest
#
